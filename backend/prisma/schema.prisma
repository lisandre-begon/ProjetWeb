// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

//table 
model user {
    id       String    @id @default(cuid())
    pseudo   String
    password String
    email    String    @unique
    isadmin  Boolean   @default(false)
    posts    post[]
    comments comment[]
    likes    like[]
}

model recipe {
    id_recipe           String               @id
    time_of_preparation Int
    ingredients         ingredientinrecipe[]
    posts               post[]
    name                String
    description         String
    number_of_person    Int
    recipetypeid        String
    recipetype          recipe_type          @relation(fields: [recipetypeid], references: [id_recipe_type])
}

model recipe_type {
    id_recipe_type String   @id
    name           String
    recipes        recipe[]
    posts          post[]
}

model ingredient {
    id_ingredient String               @id
    name          String
    recipes       ingredientinrecipe[]
}

model ingredientinrecipe {
    id           String     @id @default(uuid())
    quantity     Int
    unit         String
    recipeid     String
    ingredientid String
    recipe       recipe     @relation(fields: [recipeid], references: [id_recipe])
    ingredient   ingredient @relation(fields: [ingredientid], references: [id_ingredient])
}

model post {
    id_post      String      @id
    title        String
    content      String
    date         DateTime
    user         user        @relation(fields: [iduser], references: [id])
    iduser       String      @map("id_user")
    recipe       recipe      @relation(fields: [idrecipe], references: [id_recipe])
    idrecipe     String
    recipetypeid String
    recipetype   recipe_type @relation(fields: [recipetypeid], references: [id_recipe_type])
    comments     comment[]
    likes        like[]
}

model comment {
    id_comment String   @id
    content    String
    date       DateTime
    user       user     @relation(fields: [iduser], references: [id])
    iduser     String   @map("id")
    post       post     @relation(fields: [idpost], references: [id_post])
    idpost     String   @map("id_post")
}

model like {
    id_like String @id
    user    user   @relation(fields: [iduser], references: [id])
    iduser  String @map("id")
    post    post   @relation(fields: [idpost], references: [id_post])
    idpost  String @map("id_post")
}
